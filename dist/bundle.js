(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(537),o=n.n(r),a=n(645),i=n.n(a)()(o());i.push([e.id,"body {\n  background-color: #fff1d0;\n}\n\n#projectInputDiv {\n  display: flex;\n  justify-content: center;\n  font-size: 1.25rem;\n  align-items: center;\n}\n\n#projectInput {\n  font-size: 1rem;\n}\n\n#newTodoDiv {\n  display: flex;\n  justify-content: center;\n  font-size: 1.25rem;\n  align-items: center;\n}\n\n.projectDiv {\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\nbutton {\n  background-color: #a4adb6;\n  border: 1px solid black;\n  margin: 5px;\n  color: black;\n  text-align: center;\n  padding: 5px;\n}\n\nbutton:hover {\n  box-shadow: 0 0.5em 0.5em -0.4em #07a0c3;\n  transform: translateY(-0.25em);\n  cursor: pointer;\n}\n\n.userInterfaceDiv {\n  display: none;\n  position: fixed;\n  left: 50%;\n  top: 5%;\n  transform: translate(-50%, 5%);\n  border: 2.5px solid black;\n  background-color: #07a0c3;\n  width: 350px;\n  padding: 25px;\n}\n\n.todoDiv {\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n  border-top: 2.5px solid #07a0c3;\n}\n\n/* The below CSS is adapted from W.S. Toh at https://code-boxx.com/simple-datepicker-pure-javascript-css/#sec-extra */\n.picker-wrap {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.2s;\n}\n.picker-wrap.show {\n  opacity: 1;\n  visibility: visible;\n}\n.picker-wrap .picker {\n  margin: 50vh auto 0 auto;\n  transform: translateY(-50%);\n}\n\n.picker {\n  max-width: 500px;\n  background: #f5f5f5;\n  padding: 10px;\n  border: 2.5px solid black;\n}\n\n.picker-m,\n.picker-y {\n  width: 50%;\n  padding: 5px;\n  box-sizing: border-box;\n  font-size: 16px;\n  background-color: #a4adb6;\n  border: 1px solid black;\n}\n\n.picker-d table {\n  color: black;\n  border-collapse: separate;\n  width: 100%;\n  margin-top: 10px;\n}\n.picker-d table td {\n  width: 14.28%; /* 7 EQUAL COLUMNS */\n  padding: 5px;\n  text-align: center;\n}\n\n.picker-d-h td {\n  font-weight: bold;\n}\n\n.picker-d-b {\n  background: #4e4e4e;\n  opacity: 0;\n}\n\n.picker-d-td {\n  background: #ea4b48;\n}\n\n.picker-d-d:hover {\n  cursor: pointer;\n  background: #ea4b48;\n  box-shadow: 0 0.5em 0.5em -0.4em #07a0c3;\n  transform: translateY(-0.1em);\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,yBAAyB;EACzB,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,wCAAwC;EACxC,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,SAAS;EACT,OAAO;EACP,8BAA8B;EAC9B,yBAAyB;EACzB,yBAAyB;EACzB,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,+BAA+B;AACjC;;AAEA,qHAAqH;AACrH;EACE,eAAe;EACf,MAAM;EACN,OAAO;EACP,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,UAAU;EACV,kBAAkB;EAClB,wBAAwB;AAC1B;AACA;EACE,UAAU;EACV,mBAAmB;AACrB;AACA;EACE,wBAAwB;EACxB,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,aAAa;EACb,yBAAyB;AAC3B;;AAEA;;EAEE,UAAU;EACV,YAAY;EACZ,sBAAsB;EACtB,eAAe;EACf,yBAAyB;EACzB,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,yBAAyB;EACzB,WAAW;EACX,gBAAgB;AAClB;AACA;EACE,aAAa,EAAE,oBAAoB;EACnC,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;EACnB,UAAU;AACZ;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,mBAAmB;EACnB,wCAAwC;EACxC,6BAA6B;AAC/B",sourcesContent:["body {\n  background-color: #fff1d0;\n}\n\n#projectInputDiv {\n  display: flex;\n  justify-content: center;\n  font-size: 1.25rem;\n  align-items: center;\n}\n\n#projectInput {\n  font-size: 1rem;\n}\n\n#newTodoDiv {\n  display: flex;\n  justify-content: center;\n  font-size: 1.25rem;\n  align-items: center;\n}\n\n.projectDiv {\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\nbutton {\n  background-color: #a4adb6;\n  border: 1px solid black;\n  margin: 5px;\n  color: black;\n  text-align: center;\n  padding: 5px;\n}\n\nbutton:hover {\n  box-shadow: 0 0.5em 0.5em -0.4em #07a0c3;\n  transform: translateY(-0.25em);\n  cursor: pointer;\n}\n\n.userInterfaceDiv {\n  display: none;\n  position: fixed;\n  left: 50%;\n  top: 5%;\n  transform: translate(-50%, 5%);\n  border: 2.5px solid black;\n  background-color: #07a0c3;\n  width: 350px;\n  padding: 25px;\n}\n\n.todoDiv {\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n  border-top: 2.5px solid #07a0c3;\n}\n\n/* The below CSS is adapted from W.S. Toh at https://code-boxx.com/simple-datepicker-pure-javascript-css/#sec-extra */\n.picker-wrap {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.2s;\n}\n.picker-wrap.show {\n  opacity: 1;\n  visibility: visible;\n}\n.picker-wrap .picker {\n  margin: 50vh auto 0 auto;\n  transform: translateY(-50%);\n}\n\n.picker {\n  max-width: 500px;\n  background: #f5f5f5;\n  padding: 10px;\n  border: 2.5px solid black;\n}\n\n.picker-m,\n.picker-y {\n  width: 50%;\n  padding: 5px;\n  box-sizing: border-box;\n  font-size: 16px;\n  background-color: #a4adb6;\n  border: 1px solid black;\n}\n\n.picker-d table {\n  color: black;\n  border-collapse: separate;\n  width: 100%;\n  margin-top: 10px;\n}\n.picker-d table td {\n  width: 14.28%; /* 7 EQUAL COLUMNS */\n  padding: 5px;\n  text-align: center;\n}\n\n.picker-d-h td {\n  font-weight: bold;\n}\n\n.picker-d-b {\n  background: #4e4e4e;\n  opacity: 0;\n}\n\n.picker-d-td {\n  background: #ea4b48;\n}\n\n.picker-d-d:hover {\n  cursor: pointer;\n  background: #ea4b48;\n  box-shadow: 0 0.5em 0.5em -0.4em #07a0c3;\n  transform: translateY(-0.1em);\n}\n"],sourceRoot:""}]);const d=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],d=0;d<e.length;d++){var c=e[d],l=r.base?c[0]+r.base:c[0],s=a[l]||0,p="".concat(l," ").concat(s);a[l]=s+1;var u=n(p),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(A);else{var m=o(A,r);r.byIndex=d,t.splice(d,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var d=n(a[i]);t[d].references--}for(var c=r(e,o),l=0;l<a.length;l++){var s=n(a[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}a=c}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var r={};(()=>{n.d(r,{k:()=>T});let e=document.createElement("div");function t(){let t=document.createElement("label");t.textContent="Todo Project Selector: ",t.setAttribute("for","selectProject"),e.appendChild(t);let n=document.createElement("select");n.setAttribute("id","selectProject");for(let e=0;e<i.length;e++){let t=i[e].projectName,r=document.createElement("option");r.textContent=t,r.value=t,n.appendChild(r)}e.appendChild(n)}e.setAttribute("id","selectProjectDiv");let o=document.createElement("div");function a(){o.innerHTML="";for(const[e]in i){let t=document.createElement("div");t.setAttribute("class","projectDiv");let n=document.createElement("label");n.textContent=i[e].projectName,n.setAttribute("for","projectDeleteButton"),t.appendChild(n);let r=document.createElement("button");r.setAttribute("class","projectDeleteButton"),r.textContent="Delete project",r.addEventListener("click",(function(){i.splice(e,1);let t=JSON.stringify(i);localStorage.setItem("projectsArray",t),a()})),t.appendChild(r);for(const n of i[e].todos){let r=document.createElement("div");r.setAttribute("class","todoDiv");let o=document.createElement("div");o.innerText+=n.title,o.innerText+="\n Due on: "+n.dueDate;let d=document.createElement("button");d.textContent="Edit todo",d.setAttribute("class","editButton"),d.addEventListener("click",(function(){p.style.display="block",p.style.backgroundColor="#84C0C6",titleInput.value=n.title+" ",descriptionInput.value=n.description,dueDateInput.value=n.dueDate,priorityInput.value=n.priority,notesInput.value=n.notes,document.getElementById("createNewTODOButton").addEventListener("click",(function(){let t=n.title;i[e].todos=i[e].todos.filter((function(e){return e.title!==t}));let r=JSON.stringify(i);localStorage.setItem("projectsArray",r),a(),p.style.display="none",p.style.backgroundColor="#07a0c3",titleInput.value="",descriptionInput.value="",dueDateInput.value="",priorityInput.value="",notesInput.value="",titleInput.setAttribute("placeholder","Enter a name for your TODO"),descriptionInput.setAttribute("placeholder","Enter a description for your TODO"),dueDateInput.setAttribute("placeholder","Select Due Date"),notesInput.setAttribute("placeholder","Enter any notes for your TODO")}),{once:!0})}));let c=document.createElement("button");c.textContent="Delete todo",c.setAttribute("class","deleteButton"),c.addEventListener("click",(function(){let t=n.title;i[e].todos=i[e].todos.filter((function(e){return e.title!==t}));let r=JSON.stringify(i);localStorage.setItem("projectsArray",r),a()}));let l=document.createElement("button");l.textContent="Expand todo",l.setAttribute("class","viewTodoButton"),l.addEventListener("click",(function(){o.innerText="",o.innerText+=n.title,o.innerText+="\n Due on: "+n.dueDate,o.innerText+="\n Description: "+n.description,o.innerText+="\n Priority: "+n.priority,o.innerText+="\n Notes: "+n.notes}));let s=document.createElement("button");s.textContent="Collapse todo",s.setAttribute("class","closeTodoButton"),s.addEventListener("click",(function(){o.innerText="",o.innerText+=n.title,o.innerText+="\n Due on: "+n.dueDate})),r.appendChild(o),r.appendChild(d),r.appendChild(c),r.appendChild(l),r.appendChild(s),t.appendChild(r)}o.appendChild(t),T.appendChild(o)}}const i=JSON.parse(localStorage.getItem("projectsArray"))||[{projectName:"defaultProject",todos:[]}];function d(e){this.projectName=e,this.todos=new Array}function c(e,t,n,r,o){this.title=e,this.description=t,this.dueDate=n,this.priority=r,this.notes=o}function l(){let e=!1;for(const t of i)if(projectInput.value==t.projectName){e=!0;break}if(e)projectInput.value="";else{i.push(new d(projectInput.value)),projectInput.value="";let e=JSON.stringify(i);localStorage.setItem("projectsArray",e),document.getElementById("selectProjectDiv").innerHTML="",t()}e=!1,a()}function s(){let e=document.getElementById("titleInput").value,t=document.getElementById("descriptionInput").value,n=document.getElementById("dueDateInput").value,r=document.getElementById("priorityInput").value,o=document.getElementById("notesInput").value,d=document.getElementById("selectProject").value;if(""===e||""===t||""===n||""===r||""===o)alert("Please input a value into each field before submitting your todo!"),document.getElementById("titleInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dueDateInput").value="",document.getElementById("priorityInput").value="",document.getElementById("notesInput").value="";else{let a=new c(e,t,n,r,o),l=!1;for(let e=0;e<i.length;e++){if(d==i[e].projectName&&(l=!0),l){i[e].todos.push(a);let t=JSON.stringify(i);localStorage.setItem("projectsArray",t);break}l=!1}document.getElementById("titleInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dueDateInput").value="",document.getElementById("priorityInput").value="",document.getElementById("notesInput").value=""}p.style.display="none",a()}let p=document.createElement("div");function u(){let t=document.createElement("div"),n=document.createElement("label");n.textContent="Todo Name: ",n.setAttribute("for","titleInput");let r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","titleInput"),r.setAttribute("name","titleInput"),r.setAttribute("placeholder","Enter name for Todo"),r.setAttribute("require",""),t.appendChild(n),t.appendChild(r),p.appendChild(t);let o=document.createElement("div"),a=document.createElement("label");a.textContent="Todo Description: ",a.setAttribute("for","descriptionInput");let i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("id","descriptionInput"),i.setAttribute("name","descriptionInput"),i.setAttribute("placeholder","Enter description for Todo"),i.setAttribute("require",""),o.appendChild(a),o.appendChild(i),p.appendChild(o);let d=document.createElement("div"),c=document.createElement("label");c.textContent="Todo Due Date: ",c.setAttribute("for","dueDateInput");let l=document.createElement("input");l.setAttribute("type","text"),l.setAttribute("id","dueDateInput"),l.setAttribute("placeholder","Select Due Date"),d.appendChild(c),d.appendChild(l),p.appendChild(d);let A=document.createElement("div"),m=document.createElement("label");m.textContent="Todo Priority: ",m.setAttribute("for","priorityInput");let E=document.createElement("select");E.setAttribute("id","priorityInput"),E.setAttribute("name","priorityInput");for(let e=1;e<4;e++){let t=document.createElement("option");t.value=e,t.textContent=e,t.innerHTML=e,E.appendChild(t)}A.appendChild(m),A.appendChild(E),p.appendChild(A);let f=document.createElement("div"),C=document.createElement("label");C.textContent="Todo Notes: ",C.setAttribute("for","notesInput");let b=document.createElement("input");b.setAttribute("type","text"),b.setAttribute("id","notesInput"),b.setAttribute("name","notesInput"),b.setAttribute("placeholder","Enter notes for Todo"),b.setAttribute("require",""),f.appendChild(C),f.appendChild(b),p.appendChild(f),p.appendChild(e);let v=document.createElement("button");v.setAttribute("class","createNewTODOButton"),v.innerText="Update Todo",v.setAttribute("id","createNewTODOButton"),p.appendChild(v),T.appendChild(p),document.getElementById("createNewTODOButton").addEventListener("click",s);let B=document.createElement("button");B.setAttribute("class","closeButton"),B.textContent="Close",B.addEventListener("click",(function(){p.innerHTML="",u(),p.style.display="none",p.style.backgroundColor="#07a0c3"})),p.appendChild(B)}p.id="userInterfaceDiv",p.className="userInterfaceDiv";let A={attach:function(e){var t=document.createElement("div");t.dataset.target=e.target,t.dataset.startmon=e.startmon?"1":"0",t.classList.add("picker"),e.disableday&&(t.dataset.disableday=JSON.stringify(e.disableday));var n=new Date,r=n.getUTCMonth(),o=n.getUTCFullYear(),a=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],i=document.createElement("select"),d=null;for(var c in i.classList.add("picker-m"),a)(d=document.createElement("option")).value=parseInt(c)+1,d.text=a[c],i.appendChild(d);i.selectedIndex=r,i.addEventListener("change",(function(){A.draw(this)})),t.appendChild(i),(i=document.createElement("select")).classList.add("picker-y");for(var l=o-10;l<o+10;l++)(d=document.createElement("option")).value=l,d.text=l,i.appendChild(d);i.selectedIndex=10,i.addEventListener("change",(function(){A.draw(this)})),t.appendChild(i);var s=document.createElement("div");if(s.classList.add("picker-d"),t.appendChild(s),A.draw(i),e.container)document.getElementById(e.container).appendChild(t);else{for(var p=0;null!=document.getElementById("picker-"+p);)p=Math.floor(98*Math.random())+1;t.dataset.popup="1",t.dataset.dpid=p;var u=document.createElement("div");u.id="picker-"+p,u.classList.add("picker-wrap"),u.appendChild(t);var m=document.getElementById(e.target);m.dataset.dp=p,m.readOnly=!0,m.onfocus=function(){document.getElementById("picker-"+this.dataset.dp).classList.add("show")},u.addEventListener("click",(function(e){e.target.classList.contains("picker-wrap")&&this.classList.remove("show")})),document.body.appendChild(u)}},draw:function(e){var t=e.parentElement,n=t.getElementsByClassName("picker-y")[0].value,r=t.getElementsByClassName("picker-m")[0].value,o=t.getElementsByClassName("picker-d")[0],a=new Date(Date.UTC(n,r,0)).getUTCDate(),i=0==(i=new Date(Date.UTC(n,r-1,1)).getUTCDay())?7:i,d=0==(d=new Date(Date.UTC(n,r-1,a)).getUTCDay())?7:d,c=[],l=null;if(t.dataset.disableday&&(l=JSON.parse(t.dataset.disableday)),"1"==t.dataset.startmon&&1!=i)for(var s=1;s<i;s++)c.push("B");if("0"==t.dataset.startmon&&7!=i)for(s=0;s<i;s++)c.push("B");if(null==l)for(s=1;s<=a;s++)c.push([s,!1]);else{var p=i;for(s=1;s<=a;s++){var u=l.includes(p);c.push([s,u]),8==++p&&(p=1)}}if("1"==t.dataset.startmon&&7!=d)for(s=d;s<7;s++)c.push("B");if("0"==t.dataset.startmon&&6!=d)for(s=d;s<(7==d?13:6);s++)c.push("B");var m=["Mon","Tue","Wed","Thur","Fri","Sat"];"1"==t.dataset.startmon?m.push("Sun"):m.unshift("Sun");var E=document.createElement("table"),f=null;(b=E.insertRow()).classList.add("picker-d-h");for(let e of m)(f=b.insertCell()).innerHTML=e;var C=c.length,b=E.insertRow(),v=new Date,B=null;for(v.getUTCMonth()+1==r&&v.getUTCFullYear()==n&&(B=v.getUTCDate()+2),s=0;s<C;s++)s!=C&&s%7==0&&(b=E.insertRow()),f=b.insertCell(),"B"==c[s]?f.classList.add("picker-d-b"):(f.innerHTML=c[s][0],c[s][1]?f.classList.add("picker-d-dd"):(s==B&&f.classList.add("picker-d-td"),f.classList.add("picker-d-d"),f.addEventListener("click",(function(){A.pick(this)}))));o.innerHTML="",o.appendChild(E)},pick:function(e){for(var t=e.parentElement;!t.classList.contains("picker");)t=t.parentElement;var n=t.getElementsByClassName("picker-y")[0].value,r=t.getElementsByClassName("picker-m")[0].value,o=e.innerHTML;parseInt(r)<10&&(r="0"+r),parseInt(o)<10&&(o="0"+o);var a=n+"-"+r+"-"+o;document.getElementById(t.dataset.target).value=a,"1"==t.dataset.popup&&document.getElementById("picker-"+t.dataset.dpid).classList.remove("show")}};var m=n(379),E=n.n(m),f=n(795),C=n.n(f),b=n(569),v=n.n(b),B=n(565),h=n.n(B),y=n(216),g=n.n(y),x=n(589),k=n.n(x),I=n(426),w={};w.styleTagTransform=k(),w.setAttributes=h(),w.insert=v().bind(null,"head"),w.domAPI=C(),w.insertStyleElement=g(),E()(I.Z,w),I.Z&&I.Z.locals&&I.Z.locals;let T=document.getElementById("content");window.onload=function(){!function(){let e=document.createElement("div");e.setAttribute("id","projectInputDiv");let t=document.createElement("label");t.textContent="New Todo Project: ",t.setAttribute("for","projectInput");let n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("id","projectInput"),n.setAttribute("name","projectInput"),n.setAttribute("placeholder","Project name"),n.setAttribute("require","");let r=document.createElement("button");r.setAttribute("class","createNewProjectButton"),r.innerText="Create a new project",r.setAttribute("id","createNewProjectButton"),r.addEventListener("click",l),e.appendChild(t),e.appendChild(n),e.appendChild(r),T.appendChild(e);let o=document.createElement("div");o.setAttribute("id","newTodoDiv");let a=document.createElement("label");a.textContent="New Todo: ",a.setAttribute("for","newTODOScreenButton");let i=document.createElement("button");i.setAttribute("class","newTODOScreenButton"),i.innerText="New Todo",i.setAttribute("id","newTODOScreenButton"),i.addEventListener("click",(function(){userInterfaceDiv.style.display="block"})),o.appendChild(a),o.appendChild(i),T.appendChild(o)}(),u(),t(),a(),A.attach({target:"dueDateInput"})}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,